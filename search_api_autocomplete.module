<?php

/**
 * @file
 * Adds autocomplete capabilities for Search API searches.
 */

// Include the files with the module-specific implementations.
use Drupal\search_api\IndexInterface;
use Drupal\search_api_autocomplete\Entity\SearchApiAutocompleteSearch;

require_once('search_api_autocomplete.search_api_page.inc');
require_once('search_api_autocomplete.search_api_views.inc');

/**
 * Implements hook_search_api_autocomplete_suggester_info().
 */
function search_api_autocomplete_search_api_autocomplete_suggester_info() {
  $suggesters['server'] = array(
    'label' => t('Retrieve from server'),
    'description' => t('For compatible servers, ask the server for autocomplete suggestions.'),
    'class' => 'SearchApiAutocompleteServerSuggester',
  );

  return $suggesters;
}

/**
 * Implements hook_menu().
 */
function search_api_autocomplete_menu() {
  // Admin UI
  $items['admin/config/search/search_api/index/%search_api_index/autocomplete'] = array(
    'title' => 'Autocomplete',
    'description' => 'Add autocompletion to searches for this index.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('search_api_autocomplete_admin_overview', 5),
    'access arguments' => array('administer search_api'),
    'weight' => -1,
    'type' => MENU_LOCAL_TASK,
    'context' => MENU_CONTEXT_INLINE | MENU_CONTEXT_PAGE,
    'file' => 'search_api_autocomplete.admin.inc',
  );
  $items['admin/config/search/search_api/index/%/autocomplete/%search_api_autocomplete_search/edit'] = array(
    'title' => 'Edit autocompletion settings',
    'description' => 'Edit the autocompletion settings of a search.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('search_api_autocomplete_admin_search_edit', 7),
    'access arguments' => array('administer search_api'),
    'file' => 'search_api_autocomplete.admin.inc',
  );
  $items['admin/config/search/search_api/index/%/autocomplete/%search_api_autocomplete_search/delete'] = array(
    'title' => 'Delete autocompletion settings',
    'description' => 'Delete the autocompletion settings of a search.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('search_api_autocomplete_admin_search_delete', 7),
    'access arguments' => array('administer search_api'),
    'file' => 'search_api_autocomplete.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_theme().
 */
function search_api_autocomplete_theme() {
  $themes['search_api_autocomplete_suggestion'] = [
    'variables' => [
      'keys' => NULL,
      'prefix' => NULL,
      'suggestion_prefix' => '',
      'user_input' => '',
      'suggestion_suffix' => '',
      'results' => NULL,
    ],
  ];

  return $themes;
}

/**
 * Retrieves the definitions of all suggester plugins, or a specific one.
 *
 * @param string|null $suggester_id
 *   (optional) The ID of the suggester plugin whose definition should be
 *   retrieved. Or NULL to return all known definitions.
 *
 * @return array|null
 *   If $suggester_id was given, either the definition of the given suggester
 *   plugin, or NULL if it isn't known. Otherwise, an associative array of all
 *   known suggester plugin definitions, keyed by ID.
 */
function search_api_autocomplete_suggester_info($suggester_id = NULL) {
  $suggesters = &drupal_static(__FUNCTION__);

  if (!isset($suggesters)) {
    $suggesters = module_invoke_all('search_api_autocomplete_suggester_info');
    drupal_alter('search_api_autocomplete_suggester_info', $suggesters);
    foreach ($suggesters as $i => $definition) {
      if (empty($definition['class']) || !class_exists($definition['class']) || !in_array('SearchApiAutocompleteSuggesterInterface', class_implements($definition['class']))) {
        $variables['@suggester_id'] = $i;
        watchdog('search_api_autocomplete', 'Autocomplete suggester plugin with ID @suggester_id does not specify a valid plugin class.', $variables, WATCHDOG_ERROR);
        unset($suggesters[$i]);
      }
    }
  }

  if (!isset($suggester_id)) {
    return $suggesters;
  }
  return isset($suggesters[$suggester_id]) ? $suggesters[$suggester_id] : NULL;
}

/**
 * Retrieves all suggester plugin definitions that support the given index.
 *
 * @param \Drupal\search_api\IndexInterface $index
 *   The index for which to check.
 *
 * @return array|null
 *   If $suggester_id was given, either the definition of the given suggester
 *   plugin, or NULL if it isn't known. Otherwise, an associative array of all
 *   known suggester plugin definitions, keyed by ID.
 */
function search_api_autocomplete_suggesters_for_index(IndexInterface $index) {
  $suggesters = search_api_autocomplete_suggester_info();

  foreach ($suggesters as $suggester_id => $definition) {
    if (!call_user_func(array($definition['class'], 'supportsIndex'), $index)) {
      unset($suggesters[$suggester_id]);
    }
  }

  return $suggesters;
}

/**
 * Loads the specified suggester plugin.
 *
 * @param string $suggester_id
 *   The ID of the suggester plugin to load.
 * @param SearchApiAutocompleteSearch $search
 *   The search for which to create a suggester.
 * @param array $configuration
 *   The configuration for the search.
 *
 * @return \Drupal\search_api_autocomplete\SearchApiAutocompleteSuggesterInterface|null
 *   The loaded suggester plugin, or NULL if it could not be loaded.
 */
function search_api_autocomplete_suggester_load($suggester_id, SearchApiAutocompleteSearch $search, array $configuration) {
  $definition = search_api_autocomplete_suggester_info($suggester_id);
  if (!$definition) {
    return NULL;
  }
  return call_user_func(array($definition['class'], 'create'), $search, $configuration, $suggester_id, $definition);
}
